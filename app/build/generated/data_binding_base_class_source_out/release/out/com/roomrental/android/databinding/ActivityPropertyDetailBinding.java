// Generated by view binder compiler. Do not edit!
package com.roomrental.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.roomrental.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPropertyDetailBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final MaterialButton btnBookProperty;

  @NonNull
  public final Chip chipArea;

  @NonNull
  public final Chip chipBathrooms;

  @NonNull
  public final Chip chipBedrooms;

  @NonNull
  public final ChipGroup chipGroupAmenities;

  @NonNull
  public final Chip chipPropertyType;

  @NonNull
  public final CollapsingToolbarLayout collapsingToolbarLayout;

  @NonNull
  public final TextInputEditText etEndDate;

  @NonNull
  public final TextInputEditText etStartDate;

  @NonNull
  public final ImageView ivPropertyImage;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextInputLayout tilEndDate;

  @NonNull
  public final TextInputLayout tilStartDate;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvAddress;

  @NonNull
  public final TextView tvDescription;

  @NonNull
  public final TextView tvPrice;

  private ActivityPropertyDetailBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull MaterialButton btnBookProperty,
      @NonNull Chip chipArea, @NonNull Chip chipBathrooms, @NonNull Chip chipBedrooms,
      @NonNull ChipGroup chipGroupAmenities, @NonNull Chip chipPropertyType,
      @NonNull CollapsingToolbarLayout collapsingToolbarLayout,
      @NonNull TextInputEditText etEndDate, @NonNull TextInputEditText etStartDate,
      @NonNull ImageView ivPropertyImage, @NonNull ProgressBar progressBar,
      @NonNull TextInputLayout tilEndDate, @NonNull TextInputLayout tilStartDate,
      @NonNull Toolbar toolbar, @NonNull TextView tvAddress, @NonNull TextView tvDescription,
      @NonNull TextView tvPrice) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.btnBookProperty = btnBookProperty;
    this.chipArea = chipArea;
    this.chipBathrooms = chipBathrooms;
    this.chipBedrooms = chipBedrooms;
    this.chipGroupAmenities = chipGroupAmenities;
    this.chipPropertyType = chipPropertyType;
    this.collapsingToolbarLayout = collapsingToolbarLayout;
    this.etEndDate = etEndDate;
    this.etStartDate = etStartDate;
    this.ivPropertyImage = ivPropertyImage;
    this.progressBar = progressBar;
    this.tilEndDate = tilEndDate;
    this.tilStartDate = tilStartDate;
    this.toolbar = toolbar;
    this.tvAddress = tvAddress;
    this.tvDescription = tvDescription;
    this.tvPrice = tvPrice;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPropertyDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPropertyDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_property_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPropertyDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.btnBookProperty;
      MaterialButton btnBookProperty = ViewBindings.findChildViewById(rootView, id);
      if (btnBookProperty == null) {
        break missingId;
      }

      id = R.id.chipArea;
      Chip chipArea = ViewBindings.findChildViewById(rootView, id);
      if (chipArea == null) {
        break missingId;
      }

      id = R.id.chipBathrooms;
      Chip chipBathrooms = ViewBindings.findChildViewById(rootView, id);
      if (chipBathrooms == null) {
        break missingId;
      }

      id = R.id.chipBedrooms;
      Chip chipBedrooms = ViewBindings.findChildViewById(rootView, id);
      if (chipBedrooms == null) {
        break missingId;
      }

      id = R.id.chipGroupAmenities;
      ChipGroup chipGroupAmenities = ViewBindings.findChildViewById(rootView, id);
      if (chipGroupAmenities == null) {
        break missingId;
      }

      id = R.id.chipPropertyType;
      Chip chipPropertyType = ViewBindings.findChildViewById(rootView, id);
      if (chipPropertyType == null) {
        break missingId;
      }

      id = R.id.collapsingToolbarLayout;
      CollapsingToolbarLayout collapsingToolbarLayout = ViewBindings.findChildViewById(rootView, id);
      if (collapsingToolbarLayout == null) {
        break missingId;
      }

      id = R.id.etEndDate;
      TextInputEditText etEndDate = ViewBindings.findChildViewById(rootView, id);
      if (etEndDate == null) {
        break missingId;
      }

      id = R.id.etStartDate;
      TextInputEditText etStartDate = ViewBindings.findChildViewById(rootView, id);
      if (etStartDate == null) {
        break missingId;
      }

      id = R.id.ivPropertyImage;
      ImageView ivPropertyImage = ViewBindings.findChildViewById(rootView, id);
      if (ivPropertyImage == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.tilEndDate;
      TextInputLayout tilEndDate = ViewBindings.findChildViewById(rootView, id);
      if (tilEndDate == null) {
        break missingId;
      }

      id = R.id.tilStartDate;
      TextInputLayout tilStartDate = ViewBindings.findChildViewById(rootView, id);
      if (tilStartDate == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvAddress;
      TextView tvAddress = ViewBindings.findChildViewById(rootView, id);
      if (tvAddress == null) {
        break missingId;
      }

      id = R.id.tvDescription;
      TextView tvDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvDescription == null) {
        break missingId;
      }

      id = R.id.tvPrice;
      TextView tvPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvPrice == null) {
        break missingId;
      }

      return new ActivityPropertyDetailBinding((CoordinatorLayout) rootView, appBarLayout,
          btnBookProperty, chipArea, chipBathrooms, chipBedrooms, chipGroupAmenities,
          chipPropertyType, collapsingToolbarLayout, etEndDate, etStartDate, ivPropertyImage,
          progressBar, tilEndDate, tilStartDate, toolbar, tvAddress, tvDescription, tvPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
